{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useLayoutEffect, useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"./styles\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { fetchData } from \"../../data/TheMealDB\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function HomeScreen(props) {\n  var navigation = props.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    recipe = _useState2[0],\n    SetRecipe = _useState2[1];\n  useEffect(function () {\n    handleFetchData();\n  }, []);\n  var handleFetchData = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var data = yield fetchData(\"search.php?s=\");\n        SetRecipe(data.meals);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function handleFetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return _jsx(MenuImage, {\n          onPress: function onPress() {\n            navigation.openDrawer();\n          }\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsx(View, {});\n      }\n    });\n  }, []);\n  var onPressRecipe = function onPressRecipe(item) {\n    navigation.navigate(\"Recipe\", {\n      item: item\n    });\n  };\n  var renderRecipes = function renderRecipes(_ref2) {\n    var item = _ref2.item;\n    return _jsx(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressRecipe(item.idMeal);\n      },\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Image, {\n          style: styles.photo,\n          source: {\n            uri: item.strMealThumb\n          }\n        }), _jsx(Text, {\n          style: styles.title,\n          children: item.strMeal\n        }), _jsx(Text, {\n          style: styles.category,\n          children: item.strCategory\n        })]\n      })\n    });\n  };\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      children: _jsx(FlatList, {\n        vertical: true,\n        showsVerticalScrollIndicator: false,\n        numColumns: 2,\n        data: recipe,\n        renderItem: renderRecipes,\n        keyExtractor: function keyExtractor(item) {\n          return item.idMeal;\n        }\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useLayoutEffect","useEffect","useState","FlatList","Text","View","TouchableHighlight","Image","styles","MenuImage","fetchData","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","HomeScreen","props","navigation","_useState","_useState2","_slicedToArray","recipe","SetRecipe","handleFetchData","_ref","_asyncToGenerator","data","meals","error","console","log","apply","arguments","setOptions","headerLeft","onPress","openDrawer","headerRight","onPressRecipe","item","navigate","renderRecipes","_ref2","underlayColor","idMeal","children","style","container","photo","source","uri","strMealThumb","title","strMeal","category","strCategory","vertical","showsVerticalScrollIndicator","numColumns","renderItem","keyExtractor"],"sources":["C:/Users/user/OneDrive/Documents/KULIAH/semester 5/prak ppb/TA/recipeapp_reactnative-main/src/screens/Home/HomeScreen.js"],"sourcesContent":["import React, { useLayoutEffect, useEffect, useState } from \"react\";\nimport { FlatList, Text, View, TouchableHighlight, Image } from \"react-native\";\nimport styles from \"./styles\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { fetchData } from \"../../data/TheMealDB\";\n\nexport default function HomeScreen(props) {\n  const { navigation } = props;\n  const [recipe, SetRecipe] = useState([]);\n  useEffect(() => {\n    handleFetchData();\n  }, []);\n\n  const handleFetchData = async () => {\n    try {\n      const data = await fetchData(\"search.php?s=\");\n      SetRecipe(data.meals);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerLeft: () => (\n        <MenuImage\n          onPress={() => {\n            navigation.openDrawer();\n          }}\n        />\n      ),\n      headerRight: () => <View />,\n    });\n  }, []);\n\n  const onPressRecipe = (item) => {\n    navigation.navigate(\"Recipe\", { item });\n  };\n\n  const renderRecipes = ({ item }) => (\n    <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressRecipe(item.idMeal)}>\n      <View style={styles.container}>\n        <Image style={styles.photo} source={{ uri: item.strMealThumb }} />\n        <Text style={styles.title}>{item.strMeal}</Text>\n        <Text style={styles.category}>{(item.strCategory)}</Text>\n      </View>\n    </TouchableHighlight>\n  );\n\n  return (\n    <>\n      <View>\n        <FlatList vertical showsVerticalScrollIndicator={false} numColumns={2} data={recipe} renderItem={renderRecipes} keyExtractor={(item) => item.idMeal} />\n      </View>\n    </>\n\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}