{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { fetchData } from \"../../data/TheMealDB\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Profile = function Profile() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    recipe = _useState2[0],\n    SetRecipe = _useState2[1];\n  useEffect(_asyncToGenerator(function* () {\n    try {\n      var data = yield fetchData(\"search.php?s=\");\n      console.log(data.meals);\n      SetRecipe(data.meals);\n    } catch (error) {\n      console.log(error);\n    }\n  }), []);\n  return _jsxs(View, {\n    children: [_jsx(Image, {\n      style: {\n        width: 200,\n        height: 200\n      },\n      source: {\n        uri: recipe.strMealThumb\n      }\n    }), _jsx(Text, {\n      children: recipe.strMeal\n    }), _jsxs(Text, {\n      children: [\"Category: \", recipe.strCategory]\n    }), _jsxs(Text, {\n      children: [\"Area: \", recipe.strArea]\n    }), _jsxs(Text, {\n      children: [\"Instructions: \", recipe.strInstructions]\n    })]\n  });\n};\nexport default Profile;","map":{"version":3,"names":["React","useEffect","useState","View","Text","fetchData","jsx","_jsx","jsxs","_jsxs","Profile","_useState","_useState2","_slicedToArray","recipe","SetRecipe","_asyncToGenerator","data","console","log","meals","error","children","Image","style","width","height","source","uri","strMealThumb","strMeal","strCategory","strArea","strInstructions"],"sources":["C:/Users/IMBA PC/Documents/Project Folder/recipeapp_reactnative/src/screens/Profile/Profile.js"],"sourcesContent":["// ProfileScreen.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { fetchData } from '../../data/TheMealDB';\r\n\r\nconst Profile = () => {\r\n    const [recipe, SetRecipe] = useState([]);\r\n    useEffect(async () => {\r\n        try {\r\n            const data = await fetchData(\"search.php?s=\");\r\n            console.log(data.meals);\r\n            SetRecipe(data.meals);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }, []);\r\n    return (\r\n        <View>\r\n            <Image style={{ width: 200, height: 200 }} source={{ uri: recipe.strMealThumb }} />\r\n            <Text>{recipe.strMeal}</Text>\r\n            <Text>Category: {recipe.strCategory}</Text>\r\n            <Text>Area: {recipe.strArea}</Text>\r\n            <Text>Instructions: {recipe.strInstructions}</Text>\r\n            {/* Render other details like ingredients and measurements */}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Profile;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEnD,SAASC,SAAS;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEnD,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EAClB,IAAAC,SAAA,GAA4BT,QAAQ,CAAC,EAAE,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EACxBX,SAAS,CAAAe,iBAAA,CAAC,aAAY;IAClB,IAAI;MACA,IAAMC,IAAI,SAASZ,SAAS,CAAC,eAAe,CAAC;MAC7Ca,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,KAAK,CAAC;MACvBL,SAAS,CAACE,IAAI,CAACG,KAAK,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACtB;EACJ,CAAC,GAAE,EAAE,CAAC;EACN,OACIZ,KAAA,CAACN,IAAI;IAAAmB,QAAA,GACDf,IAAA,CAACgB,KAAK;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI,CAAE;MAACC,MAAM,EAAE;QAAEC,GAAG,EAAEd,MAAM,CAACe;MAAa;IAAE,CAAE,CAAC,EACnFtB,IAAA,CAACH,IAAI;MAAAkB,QAAA,EAAER,MAAM,CAACgB;IAAO,CAAO,CAAC,EAC7BrB,KAAA,CAACL,IAAI;MAAAkB,QAAA,GAAC,YAAU,EAACR,MAAM,CAACiB,WAAW;IAAA,CAAO,CAAC,EAC3CtB,KAAA,CAACL,IAAI;MAAAkB,QAAA,GAAC,QAAM,EAACR,MAAM,CAACkB,OAAO;IAAA,CAAO,CAAC,EACnCvB,KAAA,CAACL,IAAI;MAAAkB,QAAA,GAAC,gBAAc,EAACR,MAAM,CAACmB,eAAe;IAAA,CAAO,CAAC;EAAA,CAEjD,CAAC;AAEf,CAAC;AAED,eAAevB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}