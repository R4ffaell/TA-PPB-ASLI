{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useLayoutEffect, useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport { fetchData } from \"../../data/TheMealDB\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CategoriesScreen(props) {\n  var navigation = props.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    category = _useState2[0],\n    SetCategory = _useState2[1];\n  useEffect(function () {\n    handleFetchData();\n  }, []);\n  var handleFetchData = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var data = yield fetchData(\"categories.php\");\n        SetCategory(data.categories);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function handleFetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerTitleStyle: {\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n        alignSelf: \"center\"\n      },\n      headerLeft: function headerLeft() {\n        return _jsx(MenuImage, {\n          onPress: function onPress() {\n            navigation.openDrawer();\n          }\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsx(View, {});\n      }\n    });\n  }, []);\n  var onPressCategory = function onPressCategory(item) {\n    var title = item.name;\n    var category = item;\n    navigation.navigate(\"RecipesList\", {\n      category: category,\n      title: title\n    });\n  };\n  var renderCategory = function renderCategory(_ref2) {\n    var item = _ref2.item;\n    return _jsx(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressCategory(item.strCategory);\n      },\n      children: _jsxs(View, {\n        style: styles.categoriesItemContainer,\n        children: [_jsx(Image, {\n          style: styles.categoriesPhoto,\n          source: {\n            uri: item.strCategoryThumb\n          }\n        }), _jsx(Text, {\n          style: styles.categoriesName,\n          children: item.strCategory\n        })]\n      })\n    });\n  };\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      data: category,\n      renderItem: renderCategory,\n      keyExtractor: function keyExtractor(item) {\n        return item.idCategory;\n      }\n    })\n  });\n}","map":{"version":3,"names":["React","useLayoutEffect","useEffect","useState","FlatList","Text","View","Image","TouchableHighlight","styles","fetchData","MenuImage","jsx","_jsx","jsxs","_jsxs","CategoriesScreen","props","navigation","_useState","_useState2","_slicedToArray","category","SetCategory","handleFetchData","_ref","_asyncToGenerator","data","categories","error","console","log","apply","arguments","setOptions","headerTitleStyle","fontWeight","textAlign","alignSelf","headerLeft","onPress","openDrawer","headerRight","onPressCategory","item","title","name","navigate","renderCategory","_ref2","underlayColor","strCategory","children","style","categoriesItemContainer","categoriesPhoto","source","uri","strCategoryThumb","categoriesName","renderItem","keyExtractor","idCategory"],"sources":["C:/Users/user/OneDrive/Documents/KULIAH/semester 5/prak ppb/TA/recipeapp_reactnative-main/src/screens/Categories/CategoriesScreen.js"],"sourcesContent":["import React, { useLayoutEffect, useEffect, useState } from \"react\";\nimport { FlatList, Text, View, Image, TouchableHighlight } from \"react-native\";\nimport styles from \"./styles\";\nimport { fetchData } from \"../../data/TheMealDB\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\n\nexport default function CategoriesScreen(props) {\n  const { navigation } = props;\n\n  const [category, SetCategory] = useState([]);\n  useEffect(() => {\n    handleFetchData();\n  }, []);\n\n  const handleFetchData = async () => {\n    try {\n      const data = await fetchData(\"categories.php\");\n      SetCategory(data.categories);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerTitleStyle: {\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n        alignSelf: \"center\",\n\n      },\n      headerLeft: () => (\n        <MenuImage\n          onPress={() => {\n            navigation.openDrawer();\n          }}\n        />\n      ),\n      headerRight: () => <View />,\n    });\n  }, []);\n\n  const onPressCategory = (item) => {\n    const title = item.name;\n    const category = item;\n    navigation.navigate(\"RecipesList\", { category, title });\n  };\n\n  const renderCategory = ({ item }) => (\n    <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressCategory(item.strCategory)}>\n      <View style={styles.categoriesItemContainer}>\n        <Image style={styles.categoriesPhoto} source={{ uri: item.strCategoryThumb }} />\n        <Text style={styles.categoriesName}>{item.strCategory}</Text>\n      </View>\n    </TouchableHighlight>\n  );\n\n  return (\n    <View>\n      <FlatList data={category} renderItem={renderCategory} keyExtractor={(item) => item.idCategory} />\n    </View>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}