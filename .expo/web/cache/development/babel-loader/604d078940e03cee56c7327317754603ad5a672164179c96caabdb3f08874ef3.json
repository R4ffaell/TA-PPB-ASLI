{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useLayoutEffect, useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"./styles\";\nimport { recipes } from \"../../data/dataArrays\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { getCategoryName, fetchData } from \"../../data/TheMealDB\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function HomeScreen(props) {\n  var navigation = props.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    recipe = _useState2[0],\n    SetRecipe = _useState2[1];\n  useEffect(_asyncToGenerator(function* () {\n    try {\n      var data = yield fetchData(\"search.php?s=\");\n      console.log(data.meals);\n      SetRecipe(data.meals);\n    } catch (error) {\n      console.log(error);\n    }\n  }), []);\n  useEffect(function () {\n    console.log(recipe);\n  }, [recipe]);\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return _jsx(MenuImage, {\n          onPress: function onPress() {\n            navigation.openDrawer();\n          }\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsx(View, {});\n      }\n    });\n  }, []);\n  var onPressRecipe = function onPressRecipe(item) {\n    navigation.navigate(\"Recipe\", {\n      item: item\n    });\n  };\n  var renderRecipes = function renderRecipes(_ref2) {\n    var item = _ref2.item;\n    return _jsx(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressRecipe(item);\n      },\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Image, {\n          style: styles.photo,\n          source: {\n            uri: item.photo_url\n          }\n        }), _jsx(Text, {\n          style: styles.title,\n          children: item.title\n        }), _jsx(Text, {\n          style: styles.category,\n          children: getCategoryName(item.categoryId)\n        })]\n      })\n    });\n  };\n  var renderRecipesApi = function renderRecipesApi(_ref3) {\n    var item = _ref3.item;\n    return _jsx(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressRecipe(item);\n      },\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Image, {\n          style: styles.photo,\n          source: {\n            uri: item.strMealThumb\n          }\n        }), _jsx(Text, {\n          style: styles.title,\n          children: item.strMeal\n        }), _jsx(Text, {\n          style: styles.category,\n          children: item.strCategory\n        })]\n      })\n    });\n  };\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      children: _jsx(FlatList, {\n        vertical: true,\n        showsVerticalScrollIndicator: false,\n        numColumns: 2,\n        data: recipe,\n        renderItem: renderRecipesApi,\n        keyExtractor: function keyExtractor(item) {\n          return item.idMeal;\n        }\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useLayoutEffect","useEffect","useState","FlatList","Text","View","TouchableHighlight","Image","styles","recipes","MenuImage","getCategoryName","fetchData","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","HomeScreen","props","navigation","_useState","_useState2","_slicedToArray","recipe","SetRecipe","_asyncToGenerator","data","console","log","meals","error","setOptions","headerLeft","onPress","openDrawer","headerRight","onPressRecipe","item","navigate","renderRecipes","_ref2","underlayColor","children","style","container","photo","source","uri","photo_url","title","category","categoryId","renderRecipesApi","_ref3","strMealThumb","strMeal","strCategory","vertical","showsVerticalScrollIndicator","numColumns","renderItem","keyExtractor","idMeal"],"sources":["C:/Users/IMBA PC/Documents/Project Folder/recipeapp_reactnative/src/screens/Home/HomeScreen.js"],"sourcesContent":["import React, { useLayoutEffect, useEffect, useState } from \"react\";\r\nimport { FlatList, Text, View, TouchableHighlight, Image } from \"react-native\";\r\nimport styles from \"./styles\";\r\nimport { recipes } from \"../../data/dataArrays\";\r\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\r\nimport { getCategoryName, fetchData } from \"../../data/TheMealDB\";\r\n\r\nexport default function HomeScreen(props) {\r\n  const { navigation } = props;\r\n  const [recipe, SetRecipe] = useState([]);\r\n  useEffect(async () => {\r\n    try {\r\n      const data = await fetchData(\"search.php?s=\");\r\n      console.log(data.meals);\r\n      SetRecipe(data.meals);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(recipe);\r\n  }, [recipe]);\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerLeft: () => (\r\n        <MenuImage\r\n          onPress={() => {\r\n            navigation.openDrawer();\r\n          }}\r\n        />\r\n      ),\r\n      headerRight: () => <View />,\r\n    });\r\n  }, []);\r\n\r\n  const onPressRecipe = (item) => {\r\n    navigation.navigate(\"Recipe\", { item });\r\n  };\r\n\r\n  const renderRecipes = ({ item }) => (\r\n    <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressRecipe(item)}>\r\n      <View style={styles.container}>\r\n        <Image style={styles.photo} source={{ uri: item.photo_url }} />\r\n        <Text style={styles.title}>{item.title}</Text>\r\n        <Text style={styles.category}>{getCategoryName(item.categoryId)}</Text>\r\n      </View>\r\n    </TouchableHighlight>\r\n  );\r\n\r\n  const renderRecipesApi = ({ item }) => (\r\n    <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressRecipe(item)}>\r\n      <View style={styles.container}>\r\n        <Image style={styles.photo} source={{ uri: item.strMealThumb }} />\r\n        <Text style={styles.title}>{item.strMeal}</Text>\r\n        <Text style={styles.category}>{(item.strCategory)}</Text>\r\n      </View>\r\n    </TouchableHighlight>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* <View>\r\n        <FlatList vertical showsVerticalScrollIndicator={false} numColumns={2} data={recipes} renderItem={renderRecipes} keyExtractor={(item) => `${item.recipeId}`} />\r\n      </View> */}\r\n      <View>\r\n        <FlatList vertical showsVerticalScrollIndicator={false} numColumns={2} data={recipe} renderItem={renderRecipesApi} keyExtractor={(item) => item.idMeal} />\r\n      </View>\r\n    </>\r\n\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}